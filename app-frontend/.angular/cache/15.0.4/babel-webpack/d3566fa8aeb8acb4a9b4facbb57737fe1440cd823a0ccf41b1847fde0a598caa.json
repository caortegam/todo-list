{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { TodoList } from '../app.component';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"primeng/dialog\";\nconst _c0 = function () {\n  return {\n    width: \"50vw\"\n  };\n};\nexport class TodoModalComponent {\n  constructor() {\n    this.isVisible = false;\n    this.modalSave = new EventEmitter();\n    this.modalClose = new EventEmitter();\n    this.selectedDate = new Date();\n    this.todo = new FormGroup({\n      dueDate: new FormControl(undefined, [Validators.required]),\n      description: new FormControl('', [Validators.required]),\n      priority: new FormControl(undefined, [Validators.required])\n    });\n  }\n  get dueDate() {\n    return this.todo.get('dueDate');\n  }\n  get description() {\n    return this.todo.get('description');\n  }\n  get priority() {\n    return this.todo.get('priority');\n  }\n  ngOnInit() {\n    //Call here the 'endpoint' to get the information for the todo list\n  }\n  save() {\n    const result = new TodoList();\n    result.description = this.description?.value;\n    result.priority = this.priority?.value;\n    result.dueDate = this.selectedDate;\n    this.modalSave.emit(result);\n    this.close();\n  }\n  close() {\n    this.reset();\n  }\n  reset() {\n    this.todo.reset();\n  }\n}\nTodoModalComponent.ɵfac = function TodoModalComponent_Factory(t) {\n  return new (t || TodoModalComponent)();\n};\nTodoModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TodoModalComponent,\n  selectors: [[\"todo-modal\"]],\n  inputs: {\n    isVisible: \"isVisible\"\n  },\n  outputs: {\n    modalSave: \"modalSave\",\n    modalClose: \"modalClose\"\n  },\n  decls: 6,\n  vars: 8,\n  consts: [[\"header\", \"Header\", 3, \"visible\", \"modal\", \"draggable\", \"resizable\", \"visibleChange\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"rows\", \"5\", 1, \"form-control\"]],\n  template: function TodoModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-dialog\", 0);\n      i0.ɵɵlistener(\"visibleChange\", function TodoModalComponent_Template_p_dialog_visibleChange_0_listener($event) {\n        return ctx.isVisible = $event;\n      });\n      i0.ɵɵelementStart(1, \"form\", 1)(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"textarea\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c0));\n      i0.ɵɵproperty(\"visible\", ctx.isVisible)(\"modal\", true)(\"draggable\", false)(\"resizable\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.todo);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.Dialog],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAA0C,eAAe;AACzF,SAASC,QAAQ,QAAsB,kBAAkB;AACzD,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;AAOnE,OAAM,MAAOC,kBAAkB;EAO7BC;IANS,cAAS,GAAY,KAAK;IACzB,cAAS,GAAsB,IAAIN,YAAY,EAAO;IACtD,eAAU,GAAsB,IAAIA,YAAY,EAAO;IAEjE,iBAAY,GAAS,IAAIO,IAAI,EAAE;IAG7B,IAAI,CAACC,IAAI,GAAG,IAAIL,SAAS,CAAC;MACxBM,OAAO,EAAE,IAAIP,WAAW,CAACQ,SAAS,EAAE,CAClCN,UAAU,CAACO,QAAQ,CACpB,CAAC;MACFC,WAAW,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAG,CAChCE,UAAU,CAACO,QAAQ,CACpB,CAAC;MACFE,QAAQ,EAAE,IAAIX,WAAW,CAACQ,SAAS,EAAE,CACnCN,UAAU,CAACO,QAAQ,CACpB;KACF,CAAC;EACJ;EAEA,IAAIF,OAAO;IACT,OAAO,IAAI,CAACD,IAAI,CAACM,GAAG,CAAC,SAAS,CAAC;EACjC;EAEA,IAAIF,WAAW;IACb,OAAO,IAAI,CAACJ,IAAI,CAACM,GAAG,CAAC,aAAa,CAAC;EACrC;EAEA,IAAID,QAAQ;IACV,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,UAAU,CAAC;EAClC;EAEAC,QAAQ;IACN;EAAA;EAIFC,IAAI;IACF,MAAMC,MAAM,GAAG,IAAIhB,QAAQ,EAAE;IAC7BgB,MAAM,CAACL,WAAW,GAAG,IAAI,CAACA,WAAW,EAAEM,KAAK;IAC5CD,MAAM,CAACJ,QAAQ,GAAG,IAAI,CAACA,QAAQ,EAAEK,KAAK;IACtCD,MAAM,CAACR,OAAO,GAAG,IAAI,CAACU,YAAY;IAElC,IAAI,CAACC,SAAS,CAACC,IAAI,CAACJ,MAAM,CAAC;IAC3B,IAAI,CAACK,KAAK,EAAE;EACd;EAEAA,KAAK;IACH,IAAI,CAACC,KAAK,EAAE;EACd;EAEAA,KAAK;IACH,IAAI,CAACf,IAAI,CAACe,KAAK,EAAE;EACnB;;AAtDWlB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAmB;EAAAC;IAAAC;EAAA;EAAAC;IAAAP;IAAAQ;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT/BC,mCAAqI;MAA3GA;QAAA;MAAA,EAAuB;MAC/CA,+BAAyB;MAEuBA,2BAAW;MAAAA,iBAAQ;MAC/DA,8BAAoE;MACtEA,iBAAM;;;MALuDA,yCAA2B;MAAlEA,uCAAuB;MACzCA,eAAkB;MAAlBA,oCAAkB","names":["EventEmitter","TodoList","FormControl","FormGroup","Validators","TodoModalComponent","constructor","Date","todo","dueDate","undefined","required","description","priority","get","ngOnInit","save","result","value","selectedDate","modalSave","emit","close","reset","selectors","inputs","isVisible","outputs","modalClose","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\personal-repos\\todo-list\\app-frontend\\src\\app\\todo-modal\\todo-modal.component.ts","D:\\personal-repos\\todo-list\\app-frontend\\src\\app\\todo-modal\\todo-modal.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { TodoList, TodoPriority } from '../app.component';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'todo-modal',\r\n  templateUrl: './todo-modal.component.html',\r\n  styleUrls: ['./todo-modal.component.css']\r\n})\r\nexport class TodoModalComponent implements OnInit {\r\n  @Input() isVisible: boolean = false;\r\n  @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() modalClose: EventEmitter<any> = new EventEmitter<any>();\r\n  todo: FormGroup;\r\n  selectedDate: Date = new Date();\r\n\r\n  constructor(){\r\n    this.todo = new FormGroup({\r\n      dueDate: new FormControl(undefined, [\r\n        Validators.required,\r\n      ]),\r\n      description: new FormControl('',  [\r\n        Validators.required,\r\n      ]),\r\n      priority: new FormControl(undefined, [\r\n        Validators.required,\r\n      ]),\r\n    });\r\n  }\r\n\r\n  get dueDate(){\r\n    return this.todo.get('dueDate'); \r\n  }\r\n\r\n  get description(){\r\n    return this.todo.get('description');\r\n  }\r\n\r\n  get priority(){\r\n    return this.todo.get('priority');\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    //Call here the 'endpoint' to get the information for the todo list\r\n    \r\n  }\r\n\r\n  save(){\r\n    const result = new TodoList();\r\n    result.description = this.description?.value;\r\n    result.priority = this.priority?.value;\r\n    result.dueDate = this.selectedDate;\r\n    \r\n    this.modalSave.emit(result);\r\n    this.close();\r\n  }\r\n\r\n  close(){\r\n    this.reset();\r\n  }\r\n\r\n  reset(){\r\n    this.todo.reset();\r\n  }\r\n}\r\n","<p-dialog header=\"Header\" [(visible)]=\"isVisible\" [modal]=\"true\" [style]=\"{ width: '50vw' }\" [draggable]=\"false\" [resizable]=\"false\">\r\n  <form [formGroup]=\"todo\">\r\n    <div class=\"mb-3\">\r\n      <label for=\"description\" class=\"form-label\">Description</label>\r\n      <textarea class=\"form-control\" id=\"description\" rows=\"5\"></textarea>\r\n    </div>\r\n  </form>\r\n</p-dialog>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}